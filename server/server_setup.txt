Server setup log. (from fresh RHEL6 system as delivered by operations staff)
The instruction below assumes a RedHat EL 6 system with python and kerberos, including the python-kerberos package.

 0. Log in and become root.
 
 1. Install /etc/krb5.keytab (see CSD-wiki for instructions as to obtain such a keytab)
 
 2. Install MySQL server.
        yum install mysql-server
 
 3. Install mysql connector for python.
        wget https://dev.mysql.com/get/Downloads/Connector-Python/mysql-connector-python-1.1.6-1.el6.noarch.rpm
        rpm -i mysql-connector-python-1.1.6-1.el6.noarch.rpm
 
 4. Start mysql server
        /etc/init.d/mysqld start
        
 5. Set mysql root password
        RDBPW='tgilmeh'        <- Use something else than tgilmeh here, e.g. terces ;-)
        /usr/bin/mysqladmin -u root password "$RDBPW"
        /usr/bin/mysqladmin -u root -h "$HOSTNAME" password "$RDBPW"
        
 6. Configure mysql to run on level 3
        /sbin/chkconfig --level 3 mysqld on
        
 7. Reboot and check that mysqld starts.
        /sbin/shutdown -r now
        
 8. Log in. If you have enabled GSSAPI ssh and have a kerberos ticked you should get in without giving a password.
 
 9. Become root again and reinitialize RDBPW
        sudo -s
        RDBPW='tgilmeh'  <- or rather whatever you used before
 
10. Check that mysqld is running:
        ps -ef | grep mysqld
        root      1484     1  0 17:38 ?        00:00:00 /bin/sh /usr/bin/mysqld_safe --datadir=/var/lib/mysql --socket=/var/lib/mysql/mysql.sock --pid-file=/var/run/mysqld/mysqld.pid --basedir=/usr --user=mysql
        mysql     1586  1484  0 17:38 ?        00:00:00 /usr/libexec/mysqld --basedir=/usr --datadir=/var/lib/mysql --user=mysql --log-error=/var/log/mysqld.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/lib/mysql/mysql.sock
 
11. Grant privileges for the local user srvadhoc to the database.
        DBPW=mxyzptlk       <- Or something better
        
        mysql -u root -p <<EOF
        CREATE USER 'srvadhoc'@'$HOSTNAME' IDENTIFIED BY '$DBPW';
        GRANT USAGE ON *.* TO 'srvadhoc' IDENTIFIED BY '$DBPW' WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0 ;
        GRANT SELECT, INSERT, UPDATE, DELETE, CREATE TEMPORARY TABLES ON  AdHoc.* TO  'srvadhoc'@'$HOSTNAME';
        COMMIT;
EOF

12: Open the firewall
  
     Add the following two lines BEFORE the REJECT line at the end of /etc/sysconfig/iptables:
        
        # AdHoc Server
        -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp -s 129.16/16 --dport 8877 -j ACCEPT
        
     Then restart the firewall:
        /etc/init.d/iptables restart
         
13. Create the group and local user srvadhoc
        groupadd -g 127397 srvadhoc
        useradd  -u 127397 -g 127397 srvadhoc
        
13. Change to the srvadhoc user, keep the root db password iun the environment.
        su - srvadhoc
        
14. Verify that you are not root anymore
        id
        
15. Clean up the home directory
        rm -rf .??* 
        
16. Download the adhoc server distribution and unpack
        wget https://utveckling.its.chalmers.se/downloads/adhoc-server-@@ADHOC_RELEASE@@.tar
        tar xf adhoc-server-@@ADHOC_RELEASE@@.tar
        ln -s adhoc-server-@@ADHOC_RELEASE@@ adhoc-server
        ADHOC_RUNTIME_HOME=`(cd adhoc-server; pwd)`
               
17. Create the AdHoc database
        mysql -u root -p <$ADHOC_RUNTIME_HOME/database.sql
        
18. Set up SSL
        Order and install SSL certificates. 
        Put the key file into $ADHOC_RUNTIME_HOME/etc/$HOSTNAME.key. Make the file unreadable except for the server user.
                touch $ADHOC_RUNTIME_HOME/etc/$HOSTNAME.key
                chmod 600 $ADHOC_RUNTIME_HOME/etc/$HOSTNAME.key
                cat $keyfile >$ADHOC_RUNTIME_HOME/etc/$HOSTNAME.key
                chmod 400 $ADHOC_RUNTIME_HOME/etc/$HOSTNAME.key
                rm $keyfile
        Concatenate the certificate file with the chain file and store the result into the file $ADHOC_RUNTIME_HOME/etc/`hostname`.cert
        
                cat $certfile $chainfile >$ADHOC_RUNTIME_HOME/etc/$HOSTNAME.cert
        
        Make the file readable by everyone and not writable by anyone.
        
                chmod 444 $ADHOC_RUNTIME_HOME/etc/`hostname`.cert
        
19. Start the server.
 
        $ADHOC_RUNTIME_HOME/startserver.sh
 
20. Check connectivity. Replace <adhoc_server_host> with the actual FQDN of the AdHoc Server you just started. The server should only be
     accessible from within Chalmers network, 129.16/16
     
        Start your browser and go to the following url:
        https://<adhoc_server_host>:8877
        The displayed page show say "Welcome to the AdHoc RPCC Server" on its first line.
        Stop the server with ctrl-C
        
21. Exit back to the root user
        exit
        ADHOC_RUNTIME_HOME=`(cd ~srvadhoc/adhoc-server; pwd)`
        
22. Configure the server startup environment

        cd $ADHOC_RUNTIME_HOME/etc
        touch bashrc.private
        chmod 600 bashrc.private
        sed s/YYY/$DBPW/ <bashrc.private.prototype | sed s/ZZZ/$RDBPW/ >bashrc.private
        chown srvadhoc:srvadhoc bashrc.private
        
23. Download and install the daemon utility. This utility does a lot more that the daemon function supplied by RedHat.
        wget http://libslack.org/daemon/download/daemon-0.6.4-1.x86_64.rpm
        rpm -i daemon-0.6.4-1.x86_64.rpm
        
24. Install the startup script
        cp ~srvadhoc/adhoc-server/etc/init.d/adhocserver.sh /etc/init.d/adhocserver
  
25. Tell Linux to start the adhoc server when booting
        /sbin/chkconfig --level 3 adhocserver on
        
26. Start server manually
        /etc/init.d/adhocserver start
        
27. Check accessibility again, see step 16.
 
28. Obtain a kerberos keytab for the principal HTTP/$HOSTNAME, Store the keytab file in $ADHOC_RUNTIME_HOME/etc/server.keytab and 
     make it owned and readable only for the server
        touch $ADHOC_RUNTIME_HOME/etc/server.keytab
        chown srvadhoc:srvadhoc $ADHOC_RUNTIME_HOME/etc/server.keytab
        chmod 640 $ADHOC_RUNTIME_HOME/etc/server.keytab
        cat $keytab >$ADHOC_RUNTIME_HOME/etc/server.keytab
        rm $keytab
 
29. Reboot and check that the server comes up again.
        shutdown -r now
        
30. Transfer current setup from old database
 
 	Log in again and become root.
 	 
        Run the script:
            $ADHOC_RUNTIME_HOME/server/testing/install
	When OK, remove the password for deploy level install from the bashrc.private file.

31. Reboot and check that the server is running    
        /sbin/shutdown -r now
        See step 20 for checking connectivity.
