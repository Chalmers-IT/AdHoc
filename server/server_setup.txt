Server setup log. (from fresh RHEL6 system as delivered by operations staff)


1. Install /etc/krb5.keytab (as root) (see CSD-wiki for instructions as to obtain such a keytab)
2. yum install mysql-server (as root)
3. Install mysql connector (as root)
        wget https://dev.mysql.com/get/Downloads/Connector-Python/mysql-connector-python-1.1.6-1.el6.noarch.rpm
        rpm -i mysql-connector-python-1.1.6-1.el6.noarch.rpm
 
 4. Start mysql server
        /etc/init.d/mysqld start
        
 5. Set mysql root password
        /usr/bin/mysqladmin -u root password 'new-password'
        /usr/bin/mysqladmin -u root -h adhoc.ita.chalmers.se password 'new-password'
        
 6. Configure mysql to run on level 3
        /sbin/chkconfig --level 3 mysqld on
        
 6. Reboot and check that mysqld starts.
        /sbin/shutdown -r now
        
 7. Log in. If you have enabled GSSAPI ssh and have a kerberos ticked you should get in without giving a password.
 
 8. Check that mysqld is running:
        ps -ef | grep mys
        root      1484     1  0 17:38 ?        00:00:00 /bin/sh /usr/bin/mysqld_safe --datadir=/var/lib/mysql --socket=/var/lib/mysql/mysql.sock --pid-file=/var/run/mysqld/mysqld.pid --basedir=/usr --user=mysql
        mysql     1586  1484  0 17:38 ?        00:00:00 /usr/libexec/mysqld --basedir=/usr --datadir=/var/lib/mysql --user=mysql --log-error=/var/log/mysqld.log --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/lib/mysql/mysql.sock
 
   
 9. Create the group and local user srvadhoc
        groupadd -g 127397 srvadhoc
        useradd  -u 127397 -g 127397 srvadhoc
   
 10. Change to the srvadhoc user
        su - srvadhoc
        
 11. Verify that you are not root anymore
        id
        
 12. Clean up the home directory
        rm -rf .??* 
        
 13. Download the adhoc server distribution and unpack
        wget https://utveckling.its.chalmers.se/downloads/adhoc-server-0.2.0.tar
        tar xf adhoc-server-0.2.0.tar
        
 11. Create the AdHoc database
        cd doc
        mysql -u root -p <database.sql
        
 12. Grant privileges for the local user srvadhoc to the database. In the following, replace <hostname> with the FQDN of the local host, and <db_password> with a secure password of your choosing.
        mysql -u root -p <<EOF
        CREATE USER 'srvadhoc'@'adhoc.ita.chalmers.se' IDENTIFIED BY '1qaz2wsx+pl,';
        GRANT USAGE ON *.* TO 'srvadhoc' IDENTIFIED BY '1qaz2wsx+pl,' WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0 ;
        GRANT SELECT, INSERT, UPDATE, DELETE, CREATE TEMPORARY TABLES ON  AdHoc.* TO  'srvadhoc'@'adhoc.ita.chalmers.se';
        COMMIT;
EOF
 
 13: Open the firewall
  
     Add the following two lines BEFORE the REJECT line at the end of /etc/sysconfig/iptables:
        
        # AdHoc Server
        -A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp -s 129.16/16 --dport 8877 -j ACCEPT
        
     Then restart the firewall:
        /etc/init.d/iptables restart
        
 
  
 14. Configure the server startup environment

        cd /server/AdHoc
        cp etc/bashrc.private.prototype etc/bashrc.private
        chmod 400 etc/bashrc.private
        vi etc/bashrc.private
            Replace XXX for the prod deploy level with <db_password> used above
            Replace XXX for the install level with 'new-password' for root used above.
            Save and quit.
        . .bashrc
        
 15. Start the server. As we have not configured SSL yet, disable that first.
 
        unset ADHOC_SSL_ENABLE
        python ./bin/adhocserv.py `hostname`:8877
 
 16. Check connectivity. Replace <adhoc_server_host> with the actual FQDN of the AdHoc Server you just started. The sherver should only be
     accessible from within Chalmers network, 129.16/16
     
        Start your browser and go to the following url:
        http://<adhoc_server_host>:8877
        The displayed page show say "Welcome to the AdHoc RPCC Server" on its first line.
        Stop the server with ctrl-C
        
 17. Set up SSL
        Order and install SSL certificates. 
        Put the key file into $ADHOC_RUNTIME_HOME/etc/`hostname`.key. Make the file unreadable except for the server user.
        Concatenate the certificate file with the chain file and store the result into the file $ADHOC_RUNTIME_HOME/etc/`hostname`.cert
        
        cat $certfile $chainfile >$ADHOC_RUNTIME_HOME/etc/`hostname`.cert
        
        Make the file readable by everyone and not writable by anyone.
        
        chmod 444 $ADHOC_RUNTIME_HOME/etc/`hostname`.cert
        
        Re-read the configuration again
        . .bashrc
        
        Start the server again, then try accessing the server using HTTPS from your browser. Accessing with HTTP should fail.
        python ./bin/adhocserv.py `hostname`:8877
        
 18. Download and install the daemon utility
        wget http://libslack.org/daemon/download/daemon-0.6.4-1.x86_64.rpm
        rpm -i daemon-0.6.4-1.x86_64.rpm
        
 18. Install the startup script
        cp etc/init.d/adhocserver.sh /etc/init.d/adhocserver
        
 19. Give away the files to srvadhoc
        chown -R srvadhoc .
        chgrp -R srvadhoc .
        
 19. Tell Linux to start the adhoc server when booting
        /sbin/chkconfig --level 3 adhocserver on
        
 20. Start server manually
        /etc/init.d/adhocserver start
        
 21. Check accessibility again, see step 17.
 
 22. Reboot and check that the server comes up again.
        shutdown -r now
        
 23. Transfer current setup from old database
 
 	 Log in again and become root.
 	 
        Run the script:
            $ADHOC_RUNTIME_HOME/server/testing/install
	When OK, remove the password for deploy level install from the bashrc.private file.
        
 24. Obtain a kerberos keytab for the principal HTTP/<server hostname>
     Store the keytab file in $ADHOC_RUNTIME_HOME/etc/server.keytab
     Make the keytab file owned by srvadhoc/srvadhoc and readable for the user and the group
     
 