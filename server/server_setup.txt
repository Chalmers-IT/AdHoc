ADHOC-SERVER INSTALLATION INSTRUCTIONS
======================================

Version @@ADHOC_RELEASE@@

The instructions assume a 64 bit Red Hat Enterprise Linux system version 6 
with Python and Kerberos installed, including the python-kerberos package.
The system should be registered to receive updates from Red Hat. A RHEL 6 
virtual machine in IT Service' VMware Cluster conforms to this specification.

In case you're reading this from a paper or an old file, make sure to get
the latest revision of this document!


INITIAL INSTALLATION
====================

To be done once only. 


WHAT YOU NEED
=============

A. adhoc-server-x.y.z.tar, the adhoc server package.

   URL: https://utveckling.ita.chalmers.se/project/2
   
   Currently (2015-04-13) we use the following command
   
   wget https://utveckling.ita.chalmers.se/sites/utveckling.ita.chalmers.se/\
files/adhoc-server-1.6.3.tar
   
B. The latest version of the daemon utility. This utility does a lot 
   more than the daemon function supplied by RedHat. 

   URL: http://libslack.org/daemon/download/

   Currently (2014-08-26) we use the following command

   wget http://libslack.org/daemon/download/daemon-0.6.4-1.x86_64.rpm
  
C. MySQL Connector for Python. 
   NOTE: You must use version 1.x.x  of this utility. Version 2 and above 
   contains incompatible changes and will not work with the adhoc-server. 

   URL: http://dev.mysql.com/downloads/connector/python

   Currently (2014-08-27) we use the following command

   wget http://dev.mysql.com/get/Downloads/Connector-Python/\
   mysql-connector-python-1.2.3-1.el6.noarch.rpm
   
D. Enum module for Python
   URL: https://pypi.python.org/packages/source/e/enum34/enum34-1.0.4.tar.gz#md5=ac80f432ac9373e7d162834b264034b6
   
   Currently (2015-02-11) we use the following commands
   
   su
   wget https://pypi.python.org/packages/source/e/enum34/\
   enum34-1.0.4.tar.gz#md5=ac80f432ac9373e7d162834b264034b6
   tar -zxvf enum34-1.0.4.tar.gz
   cd tar -zxvf enum34-1.0.4
   python setup.py install

E. The passwords to be used for the MySQL root and srvadhoc accounts.

F. SSL server certificate and key files for the server hostname. 
   If you are installing the system as part of a disaster recovery, 
   retrieve the certificate and key files from the old system's backup.
   Otherwise, use ITS' standard routines to order a new SSL certificate.
   
G. A Kerberos keytab for the principal HTTP/$HOSTNAME@CHALMERS.SE where 
   $HOSTNAME is the server hostname. In the case of a disaster recovery, 
   try to retrieve the Kerberos keytab file from the old system's backup. 
   If this is not possible, or if you are installing a new system, contact 
   the Kerberos operations staff (teamunix@ita.chalmers.se) for help.
   
H. Make sure that $HOSTNAME and the hostname command returns the fully 
   qualified host name, i.e. one ending with .chalmers.se. If not, adjust 
   the network configuration.


---------------------------------------------------------------------------

Part A: Server preparations

This part prepares the server machine with the needed accounts and supporting 
software packages. The instructions assume that the AdHoc server will be
installed in /cdg/adhoc. If not explicitly stated the instructions assume
that they are performed from the root account.

1.  Install the previously downloaded daemon utility

   rpm -i PACKAGE.rpm
  
2.  Install MySQL server. 

   yum install mysql-server

3.  Install the previously downloaded MySQL Connector for Python

   rpm -i PACKAGE.rpm   

4.  Start the MySQL server

   /etc/init.d/mysqld start

5.  Set the MySQL root password
 
        RDBPW='tgilmeh'     <- Use something else than tgilmeh here, e.g. terces ;-)
        /usr/bin/mysqladmin -u root password "$RDBPW"
        mysql -p <<EOF
          SET PASSWORD FOR 'root'@'$HOSTNAME' = PASSWORD('$RDBPW');
          GRANT ALL PRIVILEGES ON *.* TO 'root'@'$HOSTNAME' WITH GRANT OPTION;
EOF

 When the system ask for a password after the "EOF", enter the newly 
 added MySQL root password.

6.  Configure MySQL to start on runlevel 3

  /sbin/chkconfig --level 3 mysqld on
  
7.  Grant privileges for the local user srvadhoc to the database. Enter
    the MySQL root password previously defined when asked for the password
     
   DBPW='mxyzptlk'         <- Or something better

   mysql -u root -p <<EOF
         CREATE USER 'srvadhoc'@'$HOSTNAME' IDENTIFIED BY '$DBPW';
         GRANT USAGE ON *.* TO 'srvadhoc' IDENTIFIED BY '$DBPW' WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0 ;
         GRANT SELECT, INSERT, UPDATE, DELETE, CREATE TEMPORARY TABLES ON  AdHoc.* TO  'srvadhoc'@'$HOSTNAME';
         COMMIT;
EOF

8.  Open the firewall for TCP packets on port 8877 but from .chalmers.se only.
    The exact syntax depends on how you have set up your iptables configuration.
    Regard the following as an example only
     
   -A INPUT -m state --state NEW -m tcp -p tcp --dport 8877 -s 129.16.0.0/16 -j ACCEPT
   
9.  Create the local user srvadhoc with the personal group srvadhoc using the 
    UID and GID specified below:

   groupadd -g 127397 srvadhoc
   useradd  -r -u 127397 -g 127397 -d /cdg/adhoc srvadhoc
   mkdir -p /cdg/adhoc
   chown srvadhoc:srvadhoc /cdg/adhoc
   chmod 0700 /cdg/adhoc

10. Create a directory for the adhoc server's keytab and certifikate files

   mkdir ~srvadhoc/etc
   chown srvadhoc:srvadhoc ~srvadhoc/etc
   chmod 0775 ~srvadhoc/etc

11. Move the adhoc server's key and certificate files to ~srvadhoc/etc. Adjust
    file ownership and permissions according to the following.
    Beware that the cert file must contain the whole chain of certificates, so
    if you have been issued a certificate and a chain file, these two files will 
    have to be concatenated into the cert file.

   chown srvadhoc:srvadhoc $HOSTNAME.cert $HOSTNAME.key
   chmod 0444 $HOSTNAME.cert
   chmod 0400 $HOSTNAME.key

12. Move the adhoc server's Kerberos keytab file to ~srvadhoc/etc, the file
    name should be "server.keytab". Adjust file ownership and permissions 
    according to the following

   chown srvadhoc:srvadhoc server.keytab
   chmod 0640 server.keytab
  
---------------------------------------------------------------------------

 Part B. Installing the server software 

13. Install and configure the adhoc-server distibution

   cd /cdg/adhoc
   tar -xf adhoc-server-x.y.z.tar

   cd adhoc-server-x.y.z
   ./fix-files-adhoc-server.sh
  
14. Configure the adhoc-server startup environment. Check that RDBPW and DBPW 
    contains the correct passwords before proceeding to the next steps.
    
   echo $RDBPW
   echo $DBPW
 
   cd ~srvadhoc/etc
   touch bashrc.private
   chmod 600 bashrc.private
   sed s/YYY/$DBPW/ <../adhoc-server/etc/bashrc.private.prototype | sed s/ZZZ/$RDBPW/ >bashrc.private
   chown srvadhoc:srvadhoc bashrc.private

---------------------------------------------------------------------------

15. Change to the srvadhoc user and create the AdHoc database. Use the MySQL 
    root password previously defined when asked to enter a password. Return
    to the root usershell by issuing the "exit" command afterwards.

   su - srvadhoc   
   mysql -u root -p <adhoc-server/database.sql
   exit

---------------------------------------------------------------------------

16. As the root user again, initialize ADHOC_RUNTIME_HOME

   ADHOC_RUNTIME_HOME=`(cd ~srvadhoc/adhoc-server; pwd)`

17. Start the server. 

   su - srvadhoc $ADHOC_RUNTIME_HOME/bin/startserver.sh

18. Check connectivity. Replace <adhoc_server_host> with the actual FQDN 
    of the AdHoc Server you just started. The server should only be accessible
    from within Chalmers network, 129.16.0.0/255.255.0.0. Start your browser 
    and go to the following url:

   https://<adhoc_server_host>:8877

   The displayed page should read

     "Welcome to the AdHoc RPCC Server"
  
   on the first line.
   Stop the server with <Ctrl>-C.

19. Link in the startup script

   ln -s $ADHOC_RUNTIME_HOME/etc/init.d/adhoc-server.sh /etc/init.d/adhoc-server

20. Tell Linux to start the adhoc server at boot time

   /sbin/chkconfig --level 3 adhoc-server on

21. Start the server manually. This step assumes that you have installed the 
    daemon utility as described in step 1. The startup script does not work 
    with the native RedHat daemon utility.

   /etc/init.d/adhoc-server start
        
22. Check connectivity again, see step 18.

23. Link in the cron job that creates the the database backup. This script 
    has the path to the backup script hardwired, so if the server software 
    is installed elsewhere than /cdg/adhoc, the cron job will have to be 
    changed.
    
    It is necessary that the script file is owned by root in order to be
    run by cron.
    
   ln -s $ADHOC_RUNTIME_HOME/etc/adhoc-server-backup.cron /etc/cron.d/adhoc-server-backup
   chown root:root  $ADHOC_RUNTIME_HOME/etc/adhoc-server-backup.cron

24. Transfer current setup from old database
        Run the script:

   $ADHOC_RUNTIME_HOME/migrate_data

    Leave the install level password as is because it is used by the backup 
    script.

25. Reboot and check that the server is running    

   /sbin/shutdown -r now
  
    See step 18 for checking connectivity.

---------------------------------------------------------------------------


UPGRADING THE SERVER SOFTWARE
=============================
 
Assuming logged in as root:
 
1. Stop the server

   /etc/init.d/adhoc-server stop
        
2. Expand the adhoc-server distribution

   cd /cdg/adhoc
   tar -xof adhoc-server-x.y.z.tar

3. Configure and activate the new adhoc-server installation

   cd adhoc-server-x.y.z
   ./fix-files-adhoc-server.sh
                
4. Restart the server

   /etc/init.d/adhoc-server start
        

